DOM - Document Object Model

The Document Object Model (DOM) is a way to access and manipulate HTML code using JavaScript.
We use the DOM to dynamically make changes to a webpage during runtime.
Since HTML cannot modify its structure or content by itself during runtime, JavaScript is used to achieve dynamic manipulation.

When a web page is loaded, the browser automatically creates a Document Object Model (DOM) of the page.

<-------------------------- DOM Manipulation -------------------------->

Important Properties and Methods for DOM Manipulation:

tagName: Returns the type of the tag (e.g., DIV, P, SPAN).
innerText: Returns the visible text content inside the element.
innerHTML: Returns the HTML content inside the element.
textContent: Returns all text inside the element, including hidden content.

--------Working with Attributes

You can assign attributes to elements you want to manipulate during runtime.Use the following methods to work with attributes in JavaScript:

getAttribute(attr): Retrieves the value of an attribute.
setAttribute(attr,value): Sets a new value for an attribute.

        Example:

        let img = document.querySelector("img");
        let src = img.getAttribute("src");  // Get the 'src' attribute of an image
        img.setAttribute("alt", "New description");  // Set a new 'alt' attribute

-------Working with Styles------------

You can change an element's style using the style property:

        Example:

        let div = document.querySelector("div");
        div.style.color = "red"; // Changes the text color to red
        div.style.backgroundColor = "yellow"; // Changes the background color to yellow

---------Inserting Elements------------

You can create and insert new elements into the DOM using the following methods:

Document.createElement("tag"): Creates a new element.

node.append(el): Adds the element as the last child.
node.prepend(el): Adds the element as the first child.
node.before(el): Inserts the element before the selected node.
node.after(el): Inserts the element after the selected node.

        Example:

        let newDiv = document.createElement("div");
        newDiv.innerText = "Hello, I'm a new div!";
        document.body.append(newDiv); // Adds the new div to the end of the body

---------Deleting Elements-------------

To remove elements from the DOM, use the remove() method:

        Example:

        let div = document.querySelector("div");
        div.remove(); // Removes the selected div from the DOM

<---------------------------------------------  EVENTS in JAVASCRIPT ------------------------------------------>

Change in state of a object is known as EVENTS

Some popular events are:-
Mouse Events(click,double click),
Keyboard Events(keyPress,keyUp,keyDown),
Form Events (Submit formss...)
Print Events (...)

Apart from these we can have many types of Events




